// 最短経路取得時（車->webAPI）
{
    car_id : 'CAR_ID',
    start : 'START_TAG_ID',
    goal : 'GOAL_TAG_ID',
    disable : ['CROSS_ID_0', 'CROSS_ID_1', 'CROSS_ID_2']
}

// 最短経路取得時（webAPI->車）
{
    car_id : 'CAR_ID',
    start : 'START_TAG_ID',
    goal : 'GOAL_TAG_ID',
    routes : [
        ['cross_id_0', 'tag_id_0A', 'tag_id_0B', 'tag_id_0C', 'tag_id_0D'],
        ['cross_id_1', 'tag_id_1A', 'tag_id_1B', 'tag_id_1C', 'tag_id_1D'],
        ['cross_id_2', 'tag_id_2A', 'tag_id_2B', 'tag_id_2C', 'tag_id_2D']
    ]
}


// 交差点接続, 停止, 進入, 通過済（車->Socketサーバ）
{
    car_id : 'CAR_ID',
    status : 'connect',
    tag_id : 'TAG_ID',
    destination : 'TURN_DIRECTION'
}

[状態] status
stop : 停止
passed : 通過済

[曲がる方向] destination
0 : 直進
1 : 右折
2 : 左折


// 接続後停止指示（Socketサーバ->車）
{
    operate : 'stop'
}

[指示] operate
stop : 停止
entry : 進入
